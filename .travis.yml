# Site Kit by Google, Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

sudo: required

dist: xenial

language: php

notifications:
  email:
    on_success: never
    on_failure: change

cache:
  directories:
    - $HOME/.cache/composer
    - $HOME/.phpbrew
    - $HOME/.npm

branches:
  only:
    - master
    - develop
    - feature/ga-gtm-separation

# Before install, failures in this section will result in build status 'errored'
before_install:
  - |
    if [[ "$JS" == "1" ]] || [[ "$VRT" == "1" ]] || [[ "$E2E" == "1" ]] || [[ "$SNIFF" == "1" ]]; then
      nvm install
      npm ci
    fi
  - |
    if [[ "$PHP" == "1" ]] || [[ "$E2E" == "1" ]] || [[ "$SNIFF" == "1" ]]; then
      docker run --rm -v "$PWD:/app" -v "$HOME/.cache/composer:/tmp/cache" composer install
    fi
  - |
    if [[ "$VRT" == "1" ]]; then
      docker run --rm -v "$PWD:/app" -v "$HOME/.cache/composer:/tmp/cache" composer install --no-scripts
    fi
  - |
    if [[ "$WP_VERSION" == "latest" ]]; then
      curl -s http://api.wordpress.org/core/version-check/1.7/ > /tmp/wp-latest.json
      WP_VERSION=$(grep -o '"version":"[^"]*' /tmp/wp-latest.json | sed 's/"version":"//')
    fi
  - |
    if [[ "$PHP" == "1" ]]; then
      tests/bin/install-wp-tests.sh wordpress_test root '' localhost $WP_VERSION
    fi

script:
  - |
    if [[ "$SNIFF" == "1" ]]; then
      composer lint || exit 1
      npm run lint:js || exit 1
      npm run lint:css || exit 1
    fi
  - |
    if [[ "$JS" == "1" ]]; then
      npm run test:js || exit 1 # JS unit tests
      npm run test || exit 1 # Bundle size test
    fi
  - |
    if [[ "$VRT" == "1" ]]; then
      travis_retry npm run test:visualtest || exit 1
    fi
  - |
    if [[ "$PHP" == "1" ]]; then
      composer test || exit 1
    fi
  - |
    if [[ "$E2E" == "1" ]]; then
      npm run build:test || exit 1 # Build for tests.
      docker run --rm -v "$PWD:/app" -v "$HOME/.cache/composer:/tmp/cache" composer install
      npm run env:start || exit 1
      npm run test:e2e:ci || exit 1 # E2E tests.
    fi

jobs:
  fast_finish: true
  allow_failures:
    - env: PHP=1 WP_VERSION=nightly
    - env: E2E=1 WP_VERSION=nightly
  include:
    - name: Lint
      php: 7.4
      env: SNIFF=1 WP_VERSION=4.7 PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
    - name: PHP Tests (PHP 5.6, WordPress 4.7)
      php: 5.6
      env: PHP=1 WP_VERSION=4.7
    - name: PHP Tests (PHP 7.4, WordPress latest)
      php: 7.4
      env: PHP=1 WP_VERSION=latest
    - name: PHP Tests (PHP 7.4, WordPress Multisite latest)
      php: 7.4
      env: PHP=1 WP_VERSION=latest WP_MULTISITE=1
    - name: PHP Tests (PHP 7.4, WordPress nightly)
      php: 7.4
      env: PHP=1 WP_VERSION=nightly
    - name: JS Tests
      php: 7.4
      env: JS=1 WP_VERSION=latest PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
    - name: Visual Regression
      env: VRT=1
    - name: E2E Tests (WordPress latest)
      env: E2E=1
    - name: E2E Tests (WordPress nightly)
      env: E2E=1 WP_VERSION=nightly
    - name: E2E Tests (WordPress 4.7)
      env: E2E=1 WP_VERSION=4.7.13 AMP_VERSION=1.5.5
    - name: E2E Tests (WordPress 4.9, Gutenberg 4.9)
      env: E2E=1 WP_VERSION=4.9.10 GUTENBERG_VERSION=4.9.0

services:
  - docker
  - mysql
